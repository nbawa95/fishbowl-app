{"ast":null,"code":"var _jsxFileName = \"/Users/nikitabawa/Desktop/fishbowl-app/client/src/pages/TopicsList.jsx\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table-6';\nimport api from '../api/index.js';\nimport styled from 'styled-components';\nimport 'react-table-6/react-table.css';\nimport { Card, CardDeck } from 'react-bootstrap';\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\n\nclass TopicsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.getAllTopics().then(topics => {\n        this.setState({\n          topics: topics.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      topics: [],\n      columns: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      topics,\n      isLoading\n    } = this.state;\n    console.log('TCL: TopicsList -> render -> topics', topics);\n    const columns = [{\n      Header: 'ID',\n      accessor: '_id',\n      filterable: true\n    }, {\n      Header: 'Topic',\n      accessor: 'question',\n      filterable: true\n    }, {\n      Header: 'Active',\n      accessor: 'active',\n      filterable: true\n    }];\n    let showTable = true;\n\n    if (!topics.length) {\n      showTable = false;\n    }\n\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, showTable && /*#__PURE__*/React.createElement(ReactTable, {\n      data: topics,\n      columns: columns,\n      loading: isLoading,\n      defaultPageSize: 10,\n      showPageSizeOptions: true,\n      minRows: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CardDeck, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, topics.map(theTopic => /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: \"holder.js/100px160\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, theTopic.topic), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, theTopic.topic)), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Last updated 3 mins ago\"))))));\n  }\n\n}\n\nexport default TopicsList;","map":{"version":3,"sources":["/Users/nikitabawa/Desktop/fishbowl-app/client/src/pages/TopicsList.jsx"],"names":["React","Component","ReactTable","api","styled","Card","CardDeck","Wrapper","div","TopicsList","constructor","props","componentDidMount","setState","isLoading","getAllTopics","then","topics","data","state","columns","render","console","log","Header","accessor","filterable","showTable","length","map","theTopic","topic"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table-6';\nimport api from '../api/index.js';\n\nimport styled from 'styled-components'\n\nimport 'react-table-6/react-table.css'\nimport { Card, CardDeck } from 'react-bootstrap';\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nclass TopicsList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            topics: [],\n            columns: [],\n            isLoading: false,\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({ isLoading: true });\n\n        await api.getAllTopics().then(topics => {\n            this.setState({\n                topics: topics.data.data,\n                isLoading: false,\n            })\n        });\n    }\n\n    render() {\n        const { topics, isLoading } = this.state\n        console.log('TCL: TopicsList -> render -> topics', topics)\n\n        const columns = [\n            {\n                Header: 'ID',\n                accessor: '_id',\n                filterable: true,\n            },\n            {\n                Header: 'Topic',\n                accessor: 'question',\n                filterable: true,\n            },\n            {\n                Header: 'Active',\n                accessor: 'active',\n                filterable: true,\n            }\n        ]\n\n        let showTable = true\n        if (!topics.length) {\n            showTable = false\n        }\n\n        return (\n            <Wrapper>\n                {showTable && (\n                    <ReactTable\n                        data={topics}\n                        columns={columns}\n                        loading={isLoading}\n                        defaultPageSize={10}\n                        showPageSizeOptions={true}\n                        minRows={0}\n                    />\n                )}\n\n                <CardDeck>\n\n                  { topics.map((theTopic) =>\n                    <Card>\n                      <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n                      <Card.Body>\n                        <Card.Title>{theTopic.topic}</Card.Title>\n                        <Card.Text>\n                          {theTopic.topic}\n                        </Card.Text>\n                      </Card.Body>\n                      <Card.Footer>\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\n                      </Card.Footer>\n                    </Card>\n                  )}\n                </CardDeck>\n            </Wrapper>\n        )\n    }\n}\n\nexport default TopicsList\n"]},"metadata":{},"sourceType":"module"}