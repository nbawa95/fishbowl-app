{"ast":null,"code":"var _jsxFileName = \"/Users/nikitabawa/Desktop/fishbowl-app/client/src/pages/Answers.js\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table-6';\nimport styled from 'styled-components';\nimport 'react-table-6/react-table.css';\nimport { Card, CardDeck, Button, Form } from 'react-bootstrap';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Answers.css';\nimport plusWhiteIcon from './plus-white.png';\nimport axios from 'axios';\nconst Wrapper = styled.div`\n    padding: 0 100px 40px 100px;\n`;\n\nclass Answers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true,\n        questionId: window.location.href.split(\"answers/\")[1]\n      });\n      axios.get('/api/answers/' + window.location.href.split(\"answers/\")[1]).then(answers => {\n        if (answers.data != null) {\n          this.setState({\n            answers: answers.data,\n            isLoading: false\n          });\n        }\n      });\n      axios.get('/api/topics/' + window.location.href.split(\"answers/\")[1]).then(question => {\n        this.setState({\n          question: question.data.question\n        });\n      });\n    };\n\n    this.submitAnswer = async () => {\n      console.log(document.getElementById(\"name\").value);\n      const payload = {\n        questionId: this.state.questionId,\n        name: document.getElementById(\"name\").value,\n        answer: document.getElementById(\"answer\").value\n      };\n      axios.post('/api/answers/add', payload).then(res => {\n        console.log(res.data);\n        document.getElementById(\"name\").value = \"\";\n        document.getElementById(\"answer\").value = \"\";\n        axios.get('/api/answers/' + window.location.href.split(\"answers/\")[1]).then(answers => {\n          if (answers.data != null) {\n            this.setState({\n              answers: answers.data,\n              isLoading: false\n            });\n          }\n        });\n      }); // await api.addAnswer(payload).then(res => {\n      //     window.alert(`Answer inserted successfully`)\n      //     // this.setState({\n      //     //     question: '',\n      //     //     name: ''\n      //     // })\n      // });\n\n      console.log(payload);\n    };\n\n    this.state = {\n      questionId: '',\n      answers: [],\n      isLoading: false,\n      question: '',\n      name: '',\n      answer: ''\n    };\n  }\n\n  // handleChangeInputName = async event => {\n  //     const name = event.target.value\n  //\n  //     this.setState({\n  //       name: event.target.value\n  //     });\n  // }\n  //\n  // handleChangeInputAnswer = async event => {\n  //     const answer = event.target.value\n  //\n  //     this.setState({\n  //       answer: event.target.value\n  //     });\n  // }\n  render() {\n    const {\n      answers\n    } = this.state.answers;\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: \"#F0953D\",\n        textAlign: \"center\",\n        margin: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, this.state.question), /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"answerContainer\",\n      variant: \"flush\",\n      style: {\n        paddingBottom: \"30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, this.state.answers.map((answer, key) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n      className: \"answerCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 56\n      }\n    }, answer.name, \":\"), \" \", answer.answer)), /*#__PURE__*/React.createElement(ListGroup.Item, {\n      className: \"answerCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"inputAnswerCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"nameInput\",\n      controlId: \"formBasicName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.handleChangeInputName,\n      id: \"name\",\n      type: \"name\",\n      placeholder: \"Enter your name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"answerInput\",\n      controlId: \"formBasicAnswer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.handleChangeInputAnswer,\n      id: \"answer\",\n      as: \"textarea\",\n      rows: \"3\",\n      placeholder: \"Type your answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"submitButton\",\n      style: {\n        backgroundColor: \"#F0953D\",\n        border: \"none\"\n      },\n      onClick: this.submitAnswer,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, \"Submit your answer\")))), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.handleChangeInputName,\n      id: \"name\",\n      type: \"name\",\n      placeholder: \"Enter your name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicAnswer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.handleChangeInputAnswer,\n      id: \"answer\",\n      as: \"textarea\",\n      rows: \"3\",\n      placeholder: \"Type your answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"submitButton\",\n      style: {\n        backgroundColor: \"#E66F5F\"\n      },\n      onClick: this.submitAnswer,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: plusWhiteIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }))));\n  }\n\n}\n\nexport default Answers;","map":{"version":3,"sources":["/Users/nikitabawa/Desktop/fishbowl-app/client/src/pages/Answers.js"],"names":["React","Component","ReactTable","styled","Card","CardDeck","Button","Form","ListGroup","plusWhiteIcon","axios","Wrapper","div","Answers","constructor","props","componentDidMount","setState","isLoading","questionId","window","location","href","split","get","then","answers","data","question","submitAnswer","console","log","document","getElementById","value","payload","state","name","answer","post","res","render","color","textAlign","margin","paddingBottom","map","key","handleChangeInputName","handleChangeInputAnswer","backgroundColor","border"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,+BAAP;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,IAAjC,QAA6C,iBAA7C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,eAAP;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGR,MAAM,CAACS,GAAI;;CAA3B;;AAIA,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAC5Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,iBAZmB,GAYC,YAAY;AAC5B,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,IADC;AAEZC,QAAAA,UAAU,EAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,UAA3B,EAAuC,CAAvC;AAFA,OAAd;AAKAb,MAAAA,KAAK,CAACc,GAAN,CAAU,kBAAkBJ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,UAA3B,EAAuC,CAAvC,CAA5B,EAAuEE,IAAvE,CAA4EC,OAAO,IAAI;AACrF,YAAIA,OAAO,CAACC,IAAR,IAAgB,IAApB,EAA0B;AACxB,eAAKV,QAAL,CAAc;AACVS,YAAAA,OAAO,EAAEA,OAAO,CAACC,IADP;AAEVT,YAAAA,SAAS,EAAE;AAFD,WAAd;AAID;AACF,OAPD;AASAR,MAAAA,KAAK,CAACc,GAAN,CAAU,iBAAiBJ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,UAA3B,EAAuC,CAAvC,CAA3B,EAAsEE,IAAtE,CAA2EG,QAAQ,IAAI;AACnF,aAAKX,QAAL,CAAc;AACVW,UAAAA,QAAQ,EAAEA,QAAQ,CAACD,IAAT,CAAcC;AADd,SAAd;AAGH,OAJD;AAKH,KAhCkB;;AAAA,SAkCnBC,YAlCmB,GAkCJ,YAAY;AAEzBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAA5C;AACA,YAAMC,OAAO,GAAG;AACdhB,QAAAA,UAAU,EAAE,KAAKiB,KAAL,CAAWjB,UADT;AAEdkB,QAAAA,IAAI,EAAEL,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAFxB;AAGdI,QAAAA,MAAM,EAAEN,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC;AAH5B,OAAhB;AAMAxB,MAAAA,KAAK,CAAC6B,IAAN,CAAW,kBAAX,EAA+BJ,OAA/B,EACCV,IADD,CACMe,GAAG,IAAI;AACTV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACb,IAAhB;AACAK,QAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,GAAwC,EAAxC;AACAF,QAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,GAA0C,EAA1C;AAEAxB,QAAAA,KAAK,CAACc,GAAN,CAAU,kBAAkBJ,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,UAA3B,EAAuC,CAAvC,CAA5B,EAAuEE,IAAvE,CAA4EC,OAAO,IAAI;AACrF,cAAIA,OAAO,CAACC,IAAR,IAAgB,IAApB,EAA0B;AACxB,iBAAKV,QAAL,CAAc;AACVS,cAAAA,OAAO,EAAEA,OAAO,CAACC,IADP;AAEVT,cAAAA,SAAS,EAAE;AAFD,aAAd;AAID;AACF,SAPD;AAQD,OAdH,EATyB,CA2BzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAY,MAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AAED,KAvEkB;;AAEf,SAAKC,KAAL,GAAa;AACTjB,MAAAA,UAAU,EAAE,EADH;AAETO,MAAAA,OAAO,EAAE,EAFA;AAGTR,MAAAA,SAAS,EAAE,KAHF;AAITU,MAAAA,QAAQ,EAAE,EAJD;AAKTS,MAAAA,IAAI,EAAE,EALG;AAMTC,MAAAA,MAAM,EAAE;AANC,KAAb;AAQH;;AA+DD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEf,MAAAA;AAAF,QAAc,KAAKU,KAAL,CAAWV,OAA/B;AAEA,wBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAE;AAACgB,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,SAAS,EAAE,QAA9B;AAAwCC,QAAAA,MAAM,EAAE;AAAhD,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqE,KAAKR,KAAL,CAAWR,QAAhF,CADF,eAEE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iBAArB;AAAuC,MAAA,OAAO,EAAC,OAA/C;AAAuD,MAAA,KAAK,EAAE;AAACiB,QAAAA,aAAa,EAAE;AAAhB,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKT,KAAL,CAAWV,OAAX,CAAmBoB,GAAnB,CAAuB,CAACR,MAAD,EAASS,GAAT,kBACvB,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIT,MAAM,CAACD,IAAX,MAAvC,OAA8DC,MAAM,CAACA,MAArE,CADA,CADF,eAIA,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,WAAtB;AAAkC,MAAA,SAAS,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,EAAE,KAAKU,qBAA7B;AAAoD,MAAA,EAAE,EAAC,MAAvD;AAA8D,MAAA,IAAI,EAAC,MAAnE;AAA0E,MAAA,WAAW,EAAC,iBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAoC,MAAA,SAAS,EAAC,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,EAAE,KAAKC,uBAA7B;AAAsD,MAAA,EAAE,EAAC,QAAzD;AAAkE,MAAA,EAAE,EAAC,UAArE;AAAgF,MAAA,IAAI,EAAC,GAArF;AAAyF,MAAA,WAAW,EAAC,kBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,eAQE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,SAAlB;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAAxC;AAAsF,MAAA,OAAO,EAAE,KAAKtB,YAApG;AAAkH,MAAA,OAAO,EAAC,SAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARF,CADF,CAJA,CAFF,eAqBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,EAAE,KAAKmB,qBAA7B;AAAoD,MAAA,EAAE,EAAC,MAAvD;AAA8D,MAAA,IAAI,EAAC,MAAnE;AAA0E,MAAA,WAAW,EAAC,iBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,QAAQ,EAAE,KAAKC,uBAA7B;AAAsD,MAAA,EAAE,EAAC,QAAzD;AAAkE,MAAA,EAAE,EAAC,UAArE;AAAgF,MAAA,IAAI,EAAC,GAArF;AAAyF,MAAA,WAAW,EAAC,kBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,eAQE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAAxC;AAAsE,MAAA,OAAO,EAAE,KAAKrB,YAApF;AAAkG,MAAA,OAAO,EAAC,SAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEpB,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CArBF,CADJ;AAoCH;;AAjI2B;;AAoIhC,eAAeI,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from 'react-table-6';\n\nimport styled from 'styled-components'\n\nimport 'react-table-6/react-table.css'\nimport { Card, CardDeck, Button, Form } from 'react-bootstrap';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport './Answers.css';\nimport plusWhiteIcon from './plus-white.png';\n\nimport axios from 'axios';\n\nconst Wrapper = styled.div`\n    padding: 0 100px 40px 100px;\n`\n\nclass Answers extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            questionId: '',\n            answers: [],\n            isLoading: false,\n            question: '',\n            name: '',\n            answer: ''\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({\n          isLoading: true,\n          questionId: window.location.href.split(\"answers/\")[1]\n        });\n\n        axios.get('/api/answers/' + window.location.href.split(\"answers/\")[1]).then(answers => {\n          if (answers.data != null) {\n            this.setState({\n                answers: answers.data,\n                isLoading: false,\n            })\n          }\n        });\n\n        axios.get('/api/topics/' + window.location.href.split(\"answers/\")[1]).then(question => {\n            this.setState({\n                question: question.data.question\n            })\n        });\n    }\n\n    submitAnswer = async () => {\n\n      console.log(document.getElementById(\"name\").value);\n      const payload = {\n        questionId: this.state.questionId,\n        name: document.getElementById(\"name\").value,\n        answer: document.getElementById(\"answer\").value\n      }\n\n      axios.post('/api/answers/add', payload)\n      .then(res => {\n          console.log(res.data);\n          document.getElementById(\"name\").value = \"\";\n          document.getElementById(\"answer\").value = \"\";\n\n          axios.get('/api/answers/' + window.location.href.split(\"answers/\")[1]).then(answers => {\n            if (answers.data != null) {\n              this.setState({\n                  answers: answers.data,\n                  isLoading: false,\n              })\n            }\n          });\n        }\n      );\n\n\n      // await api.addAnswer(payload).then(res => {\n      //     window.alert(`Answer inserted successfully`)\n      //     // this.setState({\n      //     //     question: '',\n      //     //     name: ''\n      //     // })\n      // });\n\n      console.log(payload);\n\n    }\n\n    // handleChangeInputName = async event => {\n    //     const name = event.target.value\n    //\n    //     this.setState({\n    //       name: event.target.value\n    //     });\n    // }\n    //\n    // handleChangeInputAnswer = async event => {\n    //     const answer = event.target.value\n    //\n    //     this.setState({\n    //       answer: event.target.value\n    //     });\n    // }\n\n    render() {\n        const { answers } = this.state.answers;\n\n        return (\n            <Wrapper>\n              <h1 style={{color: \"#F0953D\", textAlign: \"center\", margin: \"50px\"}}>{this.state.question}</h1>\n              <ListGroup className=\"answerContainer\" variant=\"flush\" style={{paddingBottom: \"30px\"}}>\n              { this.state.answers.map((answer, key) =>\n                <ListGroup.Item className=\"answerCard\"><b>{answer.name}:</b> {answer.answer}</ListGroup.Item>\n              )}\n              <ListGroup.Item className=\"answerCard\">\n                <Form className=\"inputAnswerCard\">\n                  <Form.Group className=\"nameInput\" controlId=\"formBasicName\">\n                    <Form.Control onChange={this.handleChangeInputName} id=\"name\" type=\"name\" placeholder=\"Enter your name\" />\n                  </Form.Group>\n\n                  <Form.Group className=\"answerInput\" controlId=\"formBasicAnswer\">\n                    <Form.Control onChange={this.handleChangeInputAnswer} id=\"answer\" as=\"textarea\" rows=\"3\" placeholder=\"Type your answer\" />\n                  </Form.Group>\n                  <Button className=\"submitButton\" style={{backgroundColor: \"#F0953D\", border: \"none\"}} onClick={this.submitAnswer} variant=\"primary\">\n                    Submit your answer\n                  </Button>\n                </Form>\n              </ListGroup.Item>\n              </ListGroup>\n              <Form>\n                <Form.Group controlId=\"formBasicName\">\n                  <Form.Control onChange={this.handleChangeInputName} id=\"name\" type=\"name\" placeholder=\"Enter your name\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicAnswer\">\n                  <Form.Control onChange={this.handleChangeInputAnswer} id=\"answer\" as=\"textarea\" rows=\"3\" placeholder=\"Type your answer\" />\n                </Form.Group>\n                <Button className=\"submitButton\" style={{backgroundColor: \"#E66F5F\"}} onClick={this.submitAnswer} variant=\"primary\">\n                  <img src={plusWhiteIcon} />\n                </Button>\n              </Form>\n            </Wrapper>\n        )\n    }\n}\n\nexport default Answers\n"]},"metadata":{},"sourceType":"module"}