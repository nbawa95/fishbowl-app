{"ast":null,"code":"var _jsxFileName = \"/Users/nikitabawa/Desktop/fishbowl-app/client/src/pages/Answers.js\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table-6';\nimport api from '../api/index.js';\nimport styled from 'styled-components';\nimport 'react-table-6/react-table.css';\nimport { Card, CardDeck, Button, Form } from 'react-bootstrap';\nimport ListGroup from 'react-bootstrap/ListGroup';\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\n\nclass Answers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true,\n        questionId: window.location.href.split(\"answers/\")[1].slice(0, -1)\n      });\n      await api.getAnswerById(window.location.href.split(\"answers/\")[1].slice(0, -1)).then(topics => {\n        console.log(topics);\n        this.setState({\n          answers: topics.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.submitAnswer = async () => {\n      console.log(document.getElementById(\"name\").value);\n      const payload = {\n        questionId: this.state.questionId,\n        name: document.getElementById(\"name\").value,\n        answer: document.getElementById(\"answer\").value\n      };\n      await api.addAnswer(payload).then(res => {\n        window.alert(`Answer inserted successfully`); // this.setState({\n        //     question: '',\n        //     name: ''\n        // })\n      });\n      console.log(payload);\n    };\n\n    this.state = {\n      questionId: '',\n      answers: [],\n      isLoading: false\n    };\n  }\n\n  // handleChangeInputName = async event => {\n  //     const name = event.target.value\n  //\n  //     this.setState({\n  //       name: event.target.value\n  //     });\n  // }\n  //\n  // handleChangeInputAnswer = async event => {\n  //     const answer = event.target.value\n  //\n  //     this.setState({\n  //       answer: event.target.value\n  //     });\n  // }\n  render() {\n    const {\n      answers\n    } = this.state.answers;\n    console.log(answers);\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"HI\"), /*#__PURE__*/React.createElement(ListGroup, {\n      variant: \"flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, this.state.answers.map((answer, key) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, answer.name, \": \", answer.answer))), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.handleChangeInputName,\n      id: \"name\",\n      type: \"name\",\n      placeholder: \"Enter your name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicAnswer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, \"Answer\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.handleChangeInputAnswer,\n      id: \"answer\",\n      as: \"textarea\",\n      rows: \"3\",\n      placeholder: \"Type your answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.submitAnswer,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Submit your answer\")));\n  }\n\n}\n\nexport default Answers;","map":{"version":3,"sources":["/Users/nikitabawa/Desktop/fishbowl-app/client/src/pages/Answers.js"],"names":["React","Component","ReactTable","api","styled","Card","CardDeck","Button","Form","ListGroup","Wrapper","div","Answers","constructor","props","componentDidMount","setState","isLoading","questionId","window","location","href","split","slice","getAnswerById","then","topics","console","log","answers","data","submitAnswer","document","getElementById","value","payload","state","name","answer","addAnswer","res","alert","render","map","key","handleChangeInputName","handleChangeInputAnswer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from 'react-table-6';\nimport api from '../api/index.js';\n\nimport styled from 'styled-components'\n\nimport 'react-table-6/react-table.css'\nimport { Card, CardDeck, Button, Form } from 'react-bootstrap';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nclass Answers extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            questionId: '',\n            answers: [],\n            isLoading: false,\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({\n          isLoading: true,\n          questionId: window.location.href.split(\"answers/\")[1].slice(0, -1)\n        });\n\n        await api.getAnswerById(window.location.href.split(\"answers/\")[1].slice(0, -1)).then(topics => {\n          console.log(topics);\n            this.setState({\n                answers: topics.data.data,\n                isLoading: false,\n            })\n        });\n    }\n\n    submitAnswer = async () => {\n\n      console.log(document.getElementById(\"name\").value);\n      const payload = {\n        questionId: this.state.questionId,\n        name: document.getElementById(\"name\").value,\n        answer: document.getElementById(\"answer\").value\n      }\n\n      await api.addAnswer(payload).then(res => {\n          window.alert(`Answer inserted successfully`)\n          // this.setState({\n          //     question: '',\n          //     name: ''\n          // })\n      });\n\n      console.log(payload);\n\n    }\n\n    // handleChangeInputName = async event => {\n    //     const name = event.target.value\n    //\n    //     this.setState({\n    //       name: event.target.value\n    //     });\n    // }\n    //\n    // handleChangeInputAnswer = async event => {\n    //     const answer = event.target.value\n    //\n    //     this.setState({\n    //       answer: event.target.value\n    //     });\n    // }\n\n    render() {\n        const { answers } = this.state.answers;\n        console.log(answers);\n\n        return (\n            <Wrapper>\n              <h2>HI</h2>\n              <ListGroup variant=\"flush\">\n              { this.state.answers.map((answer, key) =>\n                <ListGroup.Item>{answer.name}: {answer.answer}</ListGroup.Item>\n              )}\n              </ListGroup>\n              <Form>\n                <Form.Group controlId=\"formBasicName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control onChange={this.handleChangeInputName} id=\"name\" type=\"name\" placeholder=\"Enter your name\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicAnswer\">\n                  <Form.Label>Answer</Form.Label>\n                  <Form.Control onChange={this.handleChangeInputAnswer} id=\"answer\" as=\"textarea\" rows=\"3\" placeholder=\"Type your answer\" />\n                </Form.Group>\n                <Button onClick={this.submitAnswer} variant=\"primary\">\n                  Submit your answer\n                </Button>\n              </Form>\n            </Wrapper>\n        )\n    }\n}\n\nexport default Answers\n"]},"metadata":{},"sourceType":"module"}