{"ast":null,"code":"var _jsxFileName = \"/Users/nikitabawa/Desktop/fishbowl-app/client/src/pages/Answers.js\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table-6';\nimport styled from 'styled-components';\nimport 'react-table-6/react-table.css';\nimport { Card, CardDeck, Button, Form } from 'react-bootstrap';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport axios from 'axios';\nconst Wrapper = styled.div`\n    padding: 0 100px 40px 100px;\n`;\n\nclass Answers extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true,\n        questionId: props.match.params.id\n      });\n      axios.get('/api/answers/' + window.location.href.split(\"answers/\")[1]).then(answers => {\n        if (answers.data != null) {\n          this.setState({\n            answers: answers.data,\n            isLoading: false\n          });\n        }\n      });\n      axios.get('/api/topics/' + window.location.href.split(\"answers/\")[1]).then(question => {\n        this.setState({\n          question: question.data.question\n        });\n      });\n    };\n\n    this.submitAnswer = async () => {\n      console.log(document.getElementById(\"name\").value);\n      const payload = {\n        questionId: this.state.questionId,\n        name: document.getElementById(\"name\").value,\n        answer: document.getElementById(\"answer\").value\n      };\n      axios.post('/api/answers/add', payload).then(res => console.log(res.data)); // await api.addAnswer(payload).then(res => {\n      //     window.alert(`Answer inserted successfully`)\n      //     // this.setState({\n      //     //     question: '',\n      //     //     name: ''\n      //     // })\n      // });\n\n      console.log(payload);\n    };\n\n    this.state = {\n      questionId: '',\n      answers: [],\n      isLoading: false,\n      question: ''\n    };\n  }\n\n  // handleChangeInputName = async event => {\n  //     const name = event.target.value\n  //\n  //     this.setState({\n  //       name: event.target.value\n  //     });\n  // }\n  //\n  // handleChangeInputAnswer = async event => {\n  //     const answer = event.target.value\n  //\n  //     this.setState({\n  //       answer: event.target.value\n  //     });\n  // }\n  render() {\n    const {\n      answers\n    } = this.state.answers;\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: \"#274c77\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, this.state.question), /*#__PURE__*/React.createElement(ListGroup, {\n      variant: \"flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, this.state.answers.map((answer, key) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n      style: {\n        backgroundColor: \"transparent\",\n        color: \"#1b2845\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 92\n      }\n    }, answer.name, \":\"), \" \", answer.answer))), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.handleChangeInputName,\n      id: \"name\",\n      type: \"name\",\n      placeholder: \"Enter your name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicAnswer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.handleChangeInputAnswer,\n      id: \"answer\",\n      as: \"textarea\",\n      rows: \"3\",\n      placeholder: \"Type your answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        backgroundColor: \"#274c77\",\n        border: \"none\"\n      },\n      onClick: this.submitAnswer,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, \"Submit your answer\")));\n  }\n\n}\n\nexport default Answers;","map":{"version":3,"sources":["/Users/nikitabawa/Desktop/fishbowl-app/client/src/pages/Answers.js"],"names":["React","Component","ReactTable","styled","Card","CardDeck","Button","Form","ListGroup","axios","Wrapper","div","Answers","constructor","props","componentDidMount","setState","isLoading","questionId","match","params","id","get","window","location","href","split","then","answers","data","question","submitAnswer","console","log","document","getElementById","value","payload","state","name","answer","post","res","render","color","textAlign","map","key","backgroundColor","handleChangeInputName","handleChangeInputAnswer","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactTable from 'react-table-6';\n\nimport styled from 'styled-components'\n\nimport 'react-table-6/react-table.css'\nimport { Card, CardDeck, Button, Form } from 'react-bootstrap';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport axios from 'axios';\n\nconst Wrapper = styled.div`\n    padding: 0 100px 40px 100px;\n`\n\nclass Answers extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            questionId: '',\n            answers: [],\n            isLoading: false,\n            question: ''\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({\n          isLoading: true,\n          questionId: props.match.params.id\n        });\n\n        axios.get('/api/answers/' + window.location.href.split(\"answers/\")[1]).then(answers => {\n          if (answers.data != null) {\n            this.setState({\n                answers: answers.data,\n                isLoading: false,\n            })\n          }\n        });\n\n        axios.get('/api/topics/' + window.location.href.split(\"answers/\")[1]).then(question => {\n            this.setState({\n                question: question.data.question\n            })\n        });\n    }\n\n    submitAnswer = async () => {\n\n      console.log(document.getElementById(\"name\").value);\n      const payload = {\n        questionId: this.state.questionId,\n        name: document.getElementById(\"name\").value,\n        answer: document.getElementById(\"answer\").value\n      }\n\n      axios.post('/api/answers/add', payload)\n      .then(res => console.log(res.data));\n\n      // await api.addAnswer(payload).then(res => {\n      //     window.alert(`Answer inserted successfully`)\n      //     // this.setState({\n      //     //     question: '',\n      //     //     name: ''\n      //     // })\n      // });\n\n      console.log(payload);\n\n    }\n\n    // handleChangeInputName = async event => {\n    //     const name = event.target.value\n    //\n    //     this.setState({\n    //       name: event.target.value\n    //     });\n    // }\n    //\n    // handleChangeInputAnswer = async event => {\n    //     const answer = event.target.value\n    //\n    //     this.setState({\n    //       answer: event.target.value\n    //     });\n    // }\n\n    render() {\n        const { answers } = this.state.answers;\n\n        return (\n            <Wrapper>\n              <h1 style={{color: \"#274c77\", textAlign: \"center\"}}>{this.state.question}</h1>\n              <ListGroup variant=\"flush\">\n              { this.state.answers.map((answer, key) =>\n                <ListGroup.Item style={{backgroundColor: \"transparent\", color: \"#1b2845\"}}><b>{answer.name}:</b> {answer.answer}</ListGroup.Item>\n              )}\n              </ListGroup>\n              <Form>\n                <Form.Group controlId=\"formBasicName\">\n                  <Form.Control onChange={this.handleChangeInputName} id=\"name\" type=\"name\" placeholder=\"Enter your name\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicAnswer\">\n                  <Form.Control onChange={this.handleChangeInputAnswer} id=\"answer\" as=\"textarea\" rows=\"3\" placeholder=\"Type your answer\" />\n                </Form.Group>\n                <Button style={{backgroundColor: \"#274c77\", border: \"none\"}} onClick={this.submitAnswer} variant=\"primary\">\n                  Submit your answer\n                </Button>\n              </Form>\n            </Wrapper>\n        )\n    }\n}\n\nexport default Answers\n"]},"metadata":{},"sourceType":"module"}